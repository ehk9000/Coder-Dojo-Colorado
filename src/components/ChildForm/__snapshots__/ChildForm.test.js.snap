// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ChildForm should match snapshot 1`] = `
<form
  className="ChildForm"
  onSubmit={[Function]}
>
  <h2>
    Register a Student
  </h2>
  <label
    htmlFor="child-name-input"
  >
    Student's Full Name
    <input
      id="child-name-input"
      name="name"
      onChange={[Function]}
      type="text"
    />
  </label>
  <label
    htmlFor="child-dob"
  >
    Student's Date of Birth
    <DatePicker
      allowSameDay={false}
      className="date-picker"
      dateFormat="MM/dd/yyyy"
      dateFormatCalendar="LLLL yyyy"
      disabled={false}
      disabledKeyboardNavigation={false}
      dropdownMode="select"
      id="child-dob"
      inlineFocusSelectedMonth={false}
      maxDate={2019-07-23T04:18:03.144Z}
      minDate={932703483144}
      monthsShown={1}
      nextMonthButtonLabel="Next month"
      onBlur={[Function]}
      onChange={[Function]}
      onClickOutside={[Function]}
      onFocus={[Function]}
      onInputClick={[Function]}
      onInputError={[Function]}
      onKeyDown={[Function]}
      onMonthChange={[Function]}
      onSelect={[Function]}
      onYearChange={[Function]}
      placeholderText="mm/dd/yyyy"
      preventOpenOnFocus={false}
      previousMonthButtonLabel="Previous Month"
      readOnly={false}
      renderDayContents={[Function]}
      scrollableMonthDropdown={true}
      scrollableYearDropdown={true}
      selected=""
      shouldCloseOnSelect={true}
      showMonthDropdown={true}
      showMonthYearPicker={false}
      showTimeInput={false}
      showTimeSelect={false}
      showYearDropdown={true}
      strictParsing={false}
      timeCaption="Time"
      timeInputLabel="Time"
      timeIntervals={30}
      useShortMonthInDropdown={true}
      withPortal={false}
    />
  </label>
  <label
    htmlFor="child-username-input"
  >
    Student's Username
    <input
      id="child-username-input"
      name="username"
      onChange={[Function]}
      type="text"
    />
  </label>
  <label
    htmlFor="child-password-input"
  >
    Student's Password
    <input
      id="child-password-input"
      name="password"
      onChange={[Function]}
      type="password"
      value=""
    />
  </label>
  <label
    htmlFor="child-password2-input"
  >
    Re-Enter Student's Password
    <input
      id="child-password2-input"
      name="password2"
      onChange={[Function]}
      type="password"
      value=""
    />
  </label>
  <div
    className="error-msg"
  />
  <button
    type="submit"
  >
    SUBMIT
  </button>
</form>
`;
